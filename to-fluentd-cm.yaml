apiVersion: v1
kind: ConfigMap
metadata:
  name: to-fluentd
  labels:
    app.kubernetes.io/name: fluentd
data:
  fluentd.conf: |# Prometheus Exporter Plugin
    # input plugin that exports metrics
    <source>
      @type prometheus
      port 24231
    </source>

    # input plugin that collects metrics from MonitorAgent
    <source>
      @type prometheus_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # input plugin that collects metrics for output plugin
    <source>
      @type prometheus_output_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # input plugin that collects metrics for in_tail plugin
    <source>
      @type prometheus_tail_monitor
      <labels>
        host ${hostname}
      </labels>
    </source>

    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      port 9880
    </source>

    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Get the logs from the containers running in the node
    <source>
      @type tail
      path /var/log/containers/*.log
      # exclude Fluentd logs
      exclude_path /var/log/containers/*fluentd*.log
      pos_file /opt/bitnami/fluentd/logs/buffers/fluentd-docker.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type regexp
        expression /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # enrich with kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    # Copy stdout stderror to different tags
    <match kubernetes.**>
      @type copy

      <store>
        @type rewrite_tag_filter
        <rule>
          key stream
          pattern stdout
          tag metric.stdout
        </rule>
        <rule>
          key stream
          pattern stderr
          tag metric.stderr
        </rule>
      </store>
    </match>

    <match metric.**>
      @type relabel
      @label @metrics
    </match>


    # Generate prometheus tags
    <label @metrics>
      <filter metric.stdout>
        @type prometheus
        <labels>
          host ${hostname}
          pod $.kubernetes.pod_name
          container $.kubernetes.container_name
          namespace $.kubernetes.namespace_name
        </labels>
        <metric>
          name kubernetes_container_logs_stdout
          type counter
          desc The total lines of stdout output 
        </metric>
      </filter>
      <filter metric.stderr>
        @type prometheus
        <labels>
          host ${hostname}
          pod $.kubernetes.pod_name
          container $.kubernetes.container_name
          namespace $.kubernetes.namespace_name
        </labels>
        <metric>
          name kubernetes_container_logs_stderr
          type counter
          desc The total lines of stderr output
        </metric>
      </filter>
      <match **>
        @type null
      </match>
    </label>
